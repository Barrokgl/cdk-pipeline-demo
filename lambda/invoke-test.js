"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.handler = void 0;
const AWS = require("aws-sdk");
const pipeline = new AWS.CodePipeline();
const putJobSuccess = function (jobId, message, context) {
    const params = {
        jobId: jobId
    };
    pipeline.putJobSuccessResult(params, function (err, data) {
        if (err) {
            context.fail(err);
        }
        else {
            context.succeed(message);
        }
    });
};
const putJobFailure = function (jobId, message, context) {
    const params = {
        jobId: jobId,
        failureDetails: {
            message: JSON.stringify(message),
            type: 'JobFailed',
            externalExecutionId: context.awsRequestId
        }
    };
    pipeline.putJobFailureResult(params, function (err, data) {
        context.fail(message);
    });
};
async function handler(event, context) {
    const jobId = event["CodePipeline.job"].id;
    console.log(jobId);
    console.log(JSON.stringify(event["CodePipeline.job"].data.actionConfiguration, undefined, 2));
    putJobSuccess(jobId, 'success', context);
}
exports.handler = handler;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW52b2tlLXRlc3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbnZva2UtdGVzdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFDQSwrQkFBK0I7QUFFL0IsTUFBTSxRQUFRLEdBQUcsSUFBSSxHQUFHLENBQUMsWUFBWSxFQUFFLENBQUM7QUFFeEMsTUFBTSxhQUFhLEdBQUcsVUFBUyxLQUFhLEVBQUUsT0FBZSxFQUFFLE9BQWdCO0lBQzNFLE1BQU0sTUFBTSxHQUFHO1FBQ1gsS0FBSyxFQUFFLEtBQUs7S0FDZixDQUFDO0lBQ0YsUUFBUSxDQUFDLG1CQUFtQixDQUFDLE1BQU0sRUFBRSxVQUFTLEdBQUcsRUFBRSxJQUFJO1FBQ25ELElBQUcsR0FBRyxFQUFFO1lBQ0osT0FBTyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztTQUNyQjthQUFNO1lBQ0gsT0FBTyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQztTQUM1QjtJQUNMLENBQUMsQ0FBQyxDQUFDO0FBQ1AsQ0FBQyxDQUFDO0FBRUYsTUFBTSxhQUFhLEdBQUcsVUFBUyxLQUFhLEVBQUUsT0FBZSxFQUFFLE9BQWdCO0lBQzNFLE1BQU0sTUFBTSxHQUFHO1FBQ1gsS0FBSyxFQUFFLEtBQUs7UUFDWixjQUFjLEVBQUU7WUFDWixPQUFPLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUM7WUFDaEMsSUFBSSxFQUFFLFdBQVc7WUFDakIsbUJBQW1CLEVBQUUsT0FBTyxDQUFDLFlBQVk7U0FDNUM7S0FDSixDQUFDO0lBQ0YsUUFBUSxDQUFDLG1CQUFtQixDQUFDLE1BQU0sRUFBRSxVQUFTLEdBQUcsRUFBRSxJQUFJO1FBQ25ELE9BQU8sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDMUIsQ0FBQyxDQUFDLENBQUM7QUFDUCxDQUFDLENBQUM7QUFFSyxLQUFLLFVBQVUsT0FBTyxDQUFDLEtBQXdCLEVBQUUsT0FBZ0I7SUFDcEUsTUFBTSxLQUFLLEdBQUcsS0FBSyxDQUFDLGtCQUFrQixDQUFDLENBQUMsRUFBRSxDQUFDO0lBQzNDLE9BQU8sQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDbkIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDLElBQUksQ0FBQyxtQkFBbUIsRUFBRSxTQUFTLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUU5RixhQUFhLENBQUMsS0FBSyxFQUFFLFNBQVMsRUFBRSxPQUFPLENBQUMsQ0FBQTtBQUM1QyxDQUFDO0FBTkQsMEJBTUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0FQSUdhdGV3YXlQcm94eUV2ZW50LCBBUElHYXRld2F5UHJveHlSZXN1bHQsIENvZGVQaXBlbGluZUV2ZW50LCBDb250ZXh0fSBmcm9tIFwiYXdzLWxhbWJkYVwiO1xuaW1wb3J0ICogYXMgQVdTIGZyb20gJ2F3cy1zZGsnO1xuXG5jb25zdCBwaXBlbGluZSA9IG5ldyBBV1MuQ29kZVBpcGVsaW5lKCk7XG5cbmNvbnN0IHB1dEpvYlN1Y2Nlc3MgPSBmdW5jdGlvbihqb2JJZDogc3RyaW5nLCBtZXNzYWdlOiBzdHJpbmcsIGNvbnRleHQ6IENvbnRleHQpIHtcbiAgICBjb25zdCBwYXJhbXMgPSB7XG4gICAgICAgIGpvYklkOiBqb2JJZFxuICAgIH07XG4gICAgcGlwZWxpbmUucHV0Sm9iU3VjY2Vzc1Jlc3VsdChwYXJhbXMsIGZ1bmN0aW9uKGVyciwgZGF0YSkge1xuICAgICAgICBpZihlcnIpIHtcbiAgICAgICAgICAgIGNvbnRleHQuZmFpbChlcnIpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY29udGV4dC5zdWNjZWVkKG1lc3NhZ2UpO1xuICAgICAgICB9XG4gICAgfSk7XG59O1xuXG5jb25zdCBwdXRKb2JGYWlsdXJlID0gZnVuY3Rpb24oam9iSWQ6IHN0cmluZywgbWVzc2FnZTogc3RyaW5nLCBjb250ZXh0OiBDb250ZXh0KSB7XG4gICAgY29uc3QgcGFyYW1zID0ge1xuICAgICAgICBqb2JJZDogam9iSWQsXG4gICAgICAgIGZhaWx1cmVEZXRhaWxzOiB7XG4gICAgICAgICAgICBtZXNzYWdlOiBKU09OLnN0cmluZ2lmeShtZXNzYWdlKSxcbiAgICAgICAgICAgIHR5cGU6ICdKb2JGYWlsZWQnLFxuICAgICAgICAgICAgZXh0ZXJuYWxFeGVjdXRpb25JZDogY29udGV4dC5hd3NSZXF1ZXN0SWRcbiAgICAgICAgfVxuICAgIH07XG4gICAgcGlwZWxpbmUucHV0Sm9iRmFpbHVyZVJlc3VsdChwYXJhbXMsIGZ1bmN0aW9uKGVyciwgZGF0YSkge1xuICAgICAgICBjb250ZXh0LmZhaWwobWVzc2FnZSk7XG4gICAgfSk7XG59O1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gaGFuZGxlcihldmVudDogQ29kZVBpcGVsaW5lRXZlbnQsIGNvbnRleHQ6IENvbnRleHQpIHtcbiAgICBjb25zdCBqb2JJZCA9IGV2ZW50W1wiQ29kZVBpcGVsaW5lLmpvYlwiXS5pZDtcbiAgICBjb25zb2xlLmxvZyhqb2JJZCk7XG4gICAgY29uc29sZS5sb2coSlNPTi5zdHJpbmdpZnkoZXZlbnRbXCJDb2RlUGlwZWxpbmUuam9iXCJdLmRhdGEuYWN0aW9uQ29uZmlndXJhdGlvbiwgdW5kZWZpbmVkLCAyKSk7XG5cbiAgICBwdXRKb2JTdWNjZXNzKGpvYklkLCAnc3VjY2VzcycsIGNvbnRleHQpXG59XG4iXX0=